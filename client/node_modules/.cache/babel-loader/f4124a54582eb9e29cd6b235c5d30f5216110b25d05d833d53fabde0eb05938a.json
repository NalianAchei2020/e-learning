{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulf\\\\OneDrive\\\\Desktop\\\\school_project\\\\project\\\\e-learning\\\\src\\\\pages\\\\codeReviewer.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { StoreContext } from '../Context/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CodeReviewer = _ref => {\n  _s();\n  let {\n    completedTasks\n  } = _ref;\n  const [dispatch, state] = useContext(StoreContext);\n  console.log(completedTasks);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pull Request Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: completedTasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: task.pullRequestLink,\n              children: task.pullRequestLink\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)]\n        }, task.taskIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CodeReviewer, \"H+NlL4s49fYA9PatOJkN7gdUa+g=\");\n_c = CodeReviewer;\nexport default CodeReviewer;\nvar _c;\n$RefreshReg$(_c, \"CodeReviewer\");","map":{"version":3,"names":["React","useContext","StoreContext","jsxDEV","_jsxDEV","Fragment","_Fragment","CodeReviewer","_ref","_s","completedTasks","dispatch","state","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","task","taskIndex","taskName","href","pullRequestLink","_c","$RefreshReg$"],"sources":["C:/Users/paulf/OneDrive/Desktop/school_project/project/e-learning/src/pages/codeReviewer.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { StoreContext } from '../Context/store';\r\nconst CodeReviewer = ({ completedTasks }) => {\r\n  const [dispatch, state] = useContext(StoreContext);\r\n  console.log(completedTasks);\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Task Name</th>\r\n            <th>Pull Request Link</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {completedTasks.map((task) => (\r\n            <tr key={task.taskIndex}>\r\n              <td>{task.taskIndex}</td>\r\n              <td>{task.taskName}</td>\r\n              <td>\r\n                <a href={task.pullRequestLink}>{task.pullRequestLink}</a>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CodeReviewer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChD,MAAMC,YAAY,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC,GAAAF,IAAA;EACtC,MAAM,CAACG,QAAQ,EAAEC,KAAK,CAAC,GAAGX,UAAU,CAACC,YAAY,CAAC;EAClDW,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;EAC3B,oBACEN,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA;MAAOY,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACtBX,OAAA;QAAAW,QAAA,eACEX,OAAA;UAAAW,QAAA,gBACEX,OAAA;YAAAW,QAAA,EAAI;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClBhB,OAAA;YAAAW,QAAA,EAAI;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRhB,OAAA;QAAAW,QAAA,EACGL,cAAc,CAACW,GAAG,CAAEC,IAAI,iBACvBlB,OAAA;UAAAW,QAAA,gBACEX,OAAA;YAAAW,QAAA,EAAKO,IAAI,CAACC;UAAS;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBhB,OAAA;YAAAW,QAAA,EAAKO,IAAI,CAACE;UAAQ;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBhB,OAAA;YAAAW,QAAA,eACEX,OAAA;cAAGqB,IAAI,EAAEH,IAAI,CAACI,eAAgB;cAAAX,QAAA,EAAEO,IAAI,CAACI;YAAe;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC;QAAA,GALEE,IAAI,CAACC,SAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMnB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACR,CAAC;AAEP,CAAC;AAACX,EAAA,CA1BIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA4BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}