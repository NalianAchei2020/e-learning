{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulf\\\\OneDrive\\\\Desktop\\\\school_project\\\\project\\\\e-learning\\\\src\\\\pages\\\\codeReviewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CodeReviewer = () => {\n  _s();\n  // Define the initial state of the completed tasks array.\n  const [completedTasks, setCompletedTasks] = useState([]);\n\n  // Event handler for when a completed task is received from the student dashboard.\n  const handleCompletedTask = (taskId, taskName, taskLink, pullRequestLink) => {\n    // Add the completed task information to the completedTasks array.\n    setCompletedTasks([...completedTasks, {\n      taskId,\n      taskName,\n      taskLink,\n      pullRequestLink\n    }]);\n  };\n\n  // Render the table of completed tasks.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Code Reviewer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pull Request Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: completedTasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: task.taskLink,\n              children: task.taskLink\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: task.pullRequestLink,\n              children: task.pullRequestLink\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, task.taskId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CodeReviewer, \"vzvJjits3kLZbogJVSf28qkvix8=\");\n_c = CodeReviewer;\nexport default CodeReviewer;\nvar _c;\n$RefreshReg$(_c, \"CodeReviewer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CodeReviewer","_s","completedTasks","setCompletedTasks","handleCompletedTask","taskId","taskName","taskLink","pullRequestLink","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","href","_c","$RefreshReg$"],"sources":["C:/Users/paulf/OneDrive/Desktop/school_project/project/e-learning/src/pages/codeReviewer.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CodeReviewer = () => {\r\n  // Define the initial state of the completed tasks array.\r\n  const [completedTasks, setCompletedTasks] = useState([]);\r\n\r\n  // Event handler for when a completed task is received from the student dashboard.\r\n  const handleCompletedTask = (taskId, taskName, taskLink, pullRequestLink) => {\r\n    // Add the completed task information to the completedTasks array.\r\n    setCompletedTasks([\r\n      ...completedTasks,\r\n      { taskId, taskName, taskLink, pullRequestLink },\r\n    ]);\r\n  };\r\n\r\n  // Render the table of completed tasks.\r\n  return (\r\n    <>\r\n      <h2>Code Reviewer Dashboard</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Task ID</th>\r\n            <th>Task Name</th>\r\n            <th>Task Link</th>\r\n            <th>Pull Request Link</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {}\r\n          {completedTasks.map((task) => (\r\n            <tr key={task.taskId}>\r\n              <td>{task.taskId}</td>\r\n              <td>{task.taskName}</td>\r\n              <td>\r\n                <a href={task.taskLink}>{task.taskLink}</a>\r\n              </td>\r\n              <td>\r\n                <a href={task.pullRequestLink}>{task.pullRequestLink}</a>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CodeReviewer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}