{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulf\\\\OneDrive\\\\Desktop\\\\school_project\\\\project\\\\e-learning\\\\src\\\\pages\\\\test.js\",\n  _s = $RefreshSig$();\nimport { works } from '../data';\n// TaskTable.js\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [taskData, setTaskData] = useState(works); // Use the imported works array\n\n  const [showForm, setShowForm] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setShowForm(true);\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    // Update the completed property of the selected task\n    setTaskData(prevData => prevData.map(module => {\n      if (module.moduleName === selectedTask.moduleName) {\n        return {\n          ...module,\n          blocks: module.blocks.map(block => {\n            if (block.blockName === selectedTask.blockName) {\n              return {\n                ...block,\n                days: block.days.map(day => {\n                  if (day.date === selectedTask.date) {\n                    return {\n                      ...day,\n                      tasks: day.tasks.map(task => {\n                        if (task.taskIndex === selectedTask.taskIndex) {\n                          return {\n                            ...task,\n                            completed: e.target.elements.completed.checked // Update the completed property\n                          };\n                        }\n\n                        return task;\n                      })\n                    };\n                  }\n                  return day;\n                })\n              };\n            }\n            return block;\n          })\n        };\n      }\n      return module;\n    }));\n    setSelectedTask(null);\n    setShowForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [taskData.map(module => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: module.moduleName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), module.blocks.map(block => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: block.blockName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), block.days.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: day.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Task Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: day.tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n                onClick: () => handleTaskClick(task),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: task.taskLink,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: task.taskName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: task.completed,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 27\n                }, this), ' ']\n              }, task.taskIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)]\n        }, day.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this))]\n      }, block.blockName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))]\n    }, module.moduleName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedTask.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"completed\",\n          children: \"Completed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"completed\",\n          id: \"completed\",\n          defaultChecked: selectedTask.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Test, \"JfiQU5okLcHp/XTrOVedkfgJqWA=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["works","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Test","_s","taskData","setTaskData","showForm","setShowForm","selectedTask","setSelectedTask","handleTaskClick","task","handleFormSubmit","e","preventDefault","prevData","map","module","moduleName","blocks","block","blockName","days","day","date","tasks","taskIndex","completed","target","elements","checked","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","taskLink","rel","taskName","time","type","status","readOnly","className","onSubmit","htmlFor","name","id","defaultChecked","_c","$RefreshReg$"],"sources":["C:/Users/paulf/OneDrive/Desktop/school_project/project/e-learning/src/pages/test.js"],"sourcesContent":["import { works } from '../data';\r\n// TaskTable.js\r\nimport React, { useState } from 'react';\r\nimport './styles.css';\r\n\r\nconst Test = () => {\r\n  const [taskData, setTaskData] = useState(works); // Use the imported works array\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n  const handleTaskClick = (task) => {\r\n    setSelectedTask(task);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Update the completed property of the selected task\r\n    setTaskData((prevData) =>\r\n      prevData.map((module) => {\r\n        if (module.moduleName === selectedTask.moduleName) {\r\n          return {\r\n            ...module,\r\n            blocks: module.blocks.map((block) => {\r\n              if (block.blockName === selectedTask.blockName) {\r\n                return {\r\n                  ...block,\r\n                  days: block.days.map((day) => {\r\n                    if (day.date === selectedTask.date) {\r\n                      return {\r\n                        ...day,\r\n                        tasks: day.tasks.map((task) => {\r\n                          if (task.taskIndex === selectedTask.taskIndex) {\r\n                            return {\r\n                              ...task,\r\n                              completed: e.target.elements.completed.checked, // Update the completed property\r\n                            };\r\n                          }\r\n                          return task;\r\n                        }),\r\n                      };\r\n                    }\r\n                    return day;\r\n                  }),\r\n                };\r\n              }\r\n              return block;\r\n            }),\r\n          };\r\n        }\r\n        return module;\r\n      })\r\n    );\r\n    setSelectedTask(null);\r\n    setShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {taskData.map((module) => (\r\n        <div key={module.moduleName}>\r\n          <h2>{module.moduleName}</h2>\r\n          {module.blocks.map((block) => (\r\n            <div key={block.blockName}>\r\n              <h3>{block.blockName}</h3>\r\n              {block.days.map((day) => (\r\n                <div key={day.date}>\r\n                  <h4>{day.date}</h4>\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Task Name</th>\r\n                        <th>Time</th>\r\n                        <th>Type</th>\r\n                        <th>Status</th>\r\n                        <th>Completed</th> {/* Add a column for the checkbox */}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {day.tasks.map((task) => (\r\n                        <tr\r\n                          key={task.taskIndex}\r\n                          onClick={() => handleTaskClick(task)}\r\n                        >\r\n                          <td>\r\n                            <a\r\n                              href={task.taskLink}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              {task.taskName}\r\n                            </a>\r\n                          </td>\r\n                          <td>{task.time}</td>\r\n                          <td>{task.type}</td>\r\n                          <td>{task.status}</td>\r\n                          <td>\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={task.completed}\r\n                              readOnly\r\n                            />\r\n                          </td>{' '}\r\n                          {/* Add the checkbox */}\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      {showForm && (\r\n        <div className=\"popup\">\r\n          <form onSubmit={handleFormSubmit}>\r\n            <h3>{selectedTask.taskName}</h3>\r\n            <label htmlFor=\"completed\">Completed:</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"completed\"\r\n              id=\"completed\"\r\n              defaultChecked={selectedTask.completed}\r\n            />\r\n            <button type=\"submit\">Save</button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}